version: '3.8'

x-airflow-common:
  &airflow-common
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/db_airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/db_airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
    INTEGRATION_STATSD: 'true'
    # AIRFLOW__METRICS__STATSD_ON: 'True'
    # AIRFLOW__METRICS__STATSD_HOST: statsd-exporter
    # AIRFLOW__METRICS__STATSD_PORT: 9125
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__ENABLE_XCOM_PICKLING: 'true'
    # AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    # AIRFLOW__CORE__LOAD_EXAMPLES: 'true'
  volumes:
    - ./lib:/opt/airflow/lib
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - /var/run/docker.sock:/var/run/docker.sock:rw
  user: "${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-50000}"
  privileged: true
  networks:
    &airflow-networks
    - airflow
  depends_on:
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy

services:
  airflow:
    image: epappas/airflow:latest
    container_name: airflow
    build:
      context: .
      dockerfile: Dockerfile
    <<: *airflow-common

  airflow-webserver:
    image: ${AIRFLOW_IMAGE_NAME:-epappas/airflow:latest}
    container_name: airflow_webserver
    <<: *airflow-common
    command: webserver
    ports:
      - 8080:8080
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  airflow-scheduler:
    image: ${AIRFLOW_IMAGE_NAME:-epappas/airflow:latest}
    <<: *airflow-common
    container_name: airflow_scheduler
    command: scheduler
    restart: always

  airflow-worker:
    image: ${AIRFLOW_IMAGE_NAME:-epappas/airflow:latest}
    container_name: airflow_worker
    <<: *airflow-common
    command: celery worker
    restart: always

  # airflow-init:
  #   image: ${AIRFLOW_IMAGE_NAME:-epappas/airflow:latest}
  #   container_name: airflow_init
  #   <<: *airflow-common
  #   environment:
  #     <<: *airflow-common-env
  #     _AIRFLOW_DB_UPGRADE: 'true'
  #     _AIRFLOW_WWW_USER_CREATE: 'true'
  #     _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
  #     _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}

  flower:
    image: ${AIRFLOW_IMAGE_NAME:-epappas/airflow:latest}
    container_name: celery_flower
    <<: *airflow-common
    command: celery flower
    ports:
      - 5555:5555
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:5555/"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
